<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../cards.css">
    <title>Document</title>

    <style>
      #colorselect{
        position: absolute;
        top: 10%;
        left: 50%;
        width: 40%;
        height: 30%;
        -webkit-backdrop-filter: blur(3px);
        backdrop-filter: blur(3px);
        z-index: 5;
        background-color: rgb(230, 220, 220);
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
      }

      #notification{
        position: absolute;
        top: 50%;
        left: 50%;

        transform: translate(-50%, -50%);
        display: none;
        justify-content: center;
        align-items: center;
        width: 50%;
        height: 25%;
        background-color: white;
        z-index: 9;
      }

      #colorselect > button {
        z-index: 6;
        width: 40%;
        height: 50px;
      }

      #order{
        position: absolute;

        top: 20%;
        left: 50%;
      }
    </style>

</head>
<body>

    <!-- <h1 id="pendingcard"></h1> -->
    <h1 id="roomid"></h1>
    <h1 id="owner"></h1>
    <h1 id="currentplayer"></h1>
    <img id="currentcard"></img>
    <div id="startt">
        <button id="startbtn" type="submit">startt</button>
    </div>
    <div style="display: flex;" id="playerlist"></div>

    <div id="order"></div>
      
    <div id="status"></div>

    <div id="opponents"></div>


    <div id="colorselect">
      <button style="background-color: red;" id="p">Piros</button>
      <button style="background-color: blue;" id="k">Kék</button>
      <button style="background-color: green;" id="z">Zöld</button>
      <button style="background-color: yellow;" id="s">Sárga</button>
    </div>


    <h1 id="pending"></h1>

    <button id="draw">Draw</button>

    <div id="game"></div>

    <div id="notification">
      <h3>A te köröd</h3>
    </div>


    <!-- <div id="players" class="players"></div> -->


    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
    <script>

      const socket = io();

      var gameid;

      socket.on('roomload', (room,roomname, game) => {
        // document.getElementById('roomid').innerHTML = `Room Name: ${roomname}`;
        //document.getElementById('owner').innerHTML = `Owner: ${room.owner}`;
        document.getElementById('status').innerHTML = `${room.status}`;
        document.getElementById("colorselect").style.display = "none"
        if(game != "N/A"){
        //document.getElementById("startbtn").style.display = "none"
        //console.log(game)
        document.getElementById('currentplayer').innerHTML = `currentplayer: ${game.currentplayer}`;
        //document.getElementById('pendingcard').innerHTML = `pending: ${game.pendingcards}`;
        document.getElementById('currentcard').src = `../cards/${game.currentcard}.png`;
        document.getElementById("order").innerHTML = `order: ${game.order}`
        console.log(game)
        
        gameid = game.personaldata.gameid;
        console.log(`GAME: ${JSON.stringify(game)}`)
          gameload(game, game.personaldata)
        }
      })


      socket.on('win', (winner) => {
        document.getElementById("owncards").innerHTML = ""
        document.getElementById("owncards").innerHTML = `Nyertes: ${winner}`
        
        setTimeout(()  => location.reload(), 5000 )
        
      })


      socket.on('gamestarted', () => {
        document.getElementById('status').innerHTML = 'started';
      })

      // Player lista kiíratás
      socket.on('playerlist', playerlist => {
        console.log(`player lista refresh: ${playerlist}`)
        // Törli a mostani listát
        document.getElementById('playerlist').innerHTML = '';
        // és kiíratja a jelenlegit

        playerlist.forEach(playername => {
          const playelement = document.createElement('p');
          playelement.textContent =  `${playername} ,`;
          document.getElementById('playerlist').appendChild(playelement);
          console.log(playelement,playername)
        });
      });

      // szoba start gomb nyomásakor
      document.getElementById('startt').addEventListener('click', function(event) {
        document.getElementById('startt').style.display = "none"
        event.preventDefault();
        socket.emit('start');
      });


      socket.on("gamestart", (personal, game) => {
        document.getElementById('startt').style.display = "none"

        document.getElementById("startbtn").style.display = "none"
        document.getElementById("colorselect").style.display = "none"
        gameid = personal.gameid;
        console.log(gameid)
        console.log("game:")
        console.log(game)
        console.log("personal:")
        console.log(personal)
        console.log("-----started---------")
        gameload(game, personal)
})

      socket.on("reload", (player, game, status) => {
        console.log(game)
        document.getElementById('startt').style.display = "none"

        document.getElementById('currentplayer').innerHTML = `currentplayer: ${game.currentplayer}`;
        //document.getElementById('pendingcard').innerHTML = `pending: ${game.pendingcards}`;
        document.getElementById("order").innerHTML = `order: ${game.order}`
        console.log(game)

        document.getElementById('currentcard').src = `../cards/${game.currentcard}.png`;


        const gamediv = document.getElementById('game');
        gamediv.innerHTML = ""
          console.log(game)
          // console.log(player.players)
          let playerdiv = document.createElement("div");
          let playercards = document.createElement('div');
          player.cards.forEach(card => {
            let cardelement = document.createElement('img')
            cardelement.src = `../cards/${card}.png`
            cardelement.alt = `${card}`
            cardelement.classList.add("card")
            console.log(cardelement)
            playercards.append(cardelement)
            playercards.classList.add("owncards")
            playercards.setAttribute('id', 'owncards')
          })
          playerdiv.append(playercards)
          gamediv.append(playerdiv)
          card_decl()
          //document.getElementById('pendingcard').innerHTML = `pending: ${game.pendingcards}`;


          const pending = document.getElementById("pending");
          if(status == "selecting"){
            pending.textContent = `${game.currentplayer} színt választ!`
          } else {
            pending.textContent = ``
          }

          console.log("----------opponet--------------")
          console.log(game)

          const opponentsdiv = document.getElementById("opponents");
          opponentsdiv.innerHTML = ""
          Object.values(game.opponents).forEach(opponent => {
            let opponentdiv = document.createElement("div");
            let opponentdetails = document.createElement("h4");
            let opponentcards = document.createElement('div');
            opponentcards.classList.add("opponentcardlist")
            opponentdetails.textContent = `${opponent.name}:`
            if(opponent.cards > 5) {
              for(let i = 0; i < opponent.cards-(opponent.cards-5);i++){
              let card = document.createElement('img');
              card.src = "../cards/ph.png"
              card.width = 75;
              card.height= 108.75;
              card.classList.add("placeholder")
              opponentcards.append(card)
            }

            let cardtext = document.createElement("p");
            cardtext.textContent = `+${opponent.cards-5}`

            opponentcards.append(cardtext)
            } else {
              for(let i = 0; i < opponent.cards;i++){
              let card = document.createElement('img');
              card.src = "../cards/ph.png"
              card.width = 75;
              card.height= 108.75;
              card.classList.add("placeholder")
              opponentcards.append(card)
            } 
          }

            opponentdiv.append(opponentdetails)
            opponentdiv.append(opponentcards)
            opponentsdiv.append(opponentdiv)
          })

          if(player.name == game.currentplayer && player.cards.filter(card =>  card[1] == "a" || card[0] == game.currentcard[0] || card[1] == game.currentcard[1]).length == 0){
            document.getElementById("draw").style.display = "block"
          } else {
            document.getElementById("draw").style.display = "none"
          }

      })

      socket.on("spectatorreload", (game, status) => {
        console.log(game)
        document.getElementById('currentplayer').innerHTML = `currentplayer: ${game.currentplayer}`;
        //document.getElementById('pendingcard').innerHTML = `pending: ${game.pendingcards}`;
        document.getElementById("order").innerHTML = `order: ${game.order}`
        console.log(game)

        document.getElementById('currentcard').src = `../cards/${game.currentcard}.png`;


        const gamediv = document.getElementById('game');
        gamediv.innerHTML = ""
          console.log(game)
          // console.log(player.players)

          //document.getElementById('pendingcard').innerHTML = `pending: ${game.pendingcards}`;


          const pending = document.getElementById("pending");
          if(status == "selecting"){
            pending.textContent = `${game.currentplayer} színt választ!`
          } else {
            pending.textContent = ``
          }

          console.log("----------opponet--------------")
          console.log(game)

          //const playersdiv = document.getElementById("players");
          playersdiv.innerHTML = ""
          Object.values(game.players).forEach(player => {
            let playerdiv = document.createElement("div");
            playerdiv.classList.add("player")
            let playerdetails = document.createElement("h2");
            let playercards = document.createElement('div');
            playercards.classList.add("playercardlist")
            playerdetails.textContent = `${player.name}:`
            // for(let i = 0; i < opponent.cards;i++){
            //   let card = document.createElement('img');
            //   card.src = "../cards/ph.png"
            //   card.width = 75;
            //   card.height= 108.75;
            //   card.classList.add("placeholder")
            //   opponentcards.append(card)
            // }

            player.cards.forEach(card => {
              let cardimg = document.createElement('img');
              cardimg.src = `../cards/${card}.png`
              cardimg.classList.add("card")
              playercards.append(cardimg)
            })

            playerdiv.append(playerdetails)
            playerdiv.append(playercards)
            playersdiv.append(playerdiv)
          })

      })



      socket.on("selectcolor", () => {
        console.log("selectcolor")
        const colorselectdiv = document.getElementById("colorselect");
        colorselectdiv.style.display = "flex"
      })

      socket.on("quit", () => {
        window.location.replace("/")
      })

      socket.on("round", () => {
        console.log("round")
        document.getElementById("notification").style.display = "flex"
        setTimeout(() => {
        document.getElementById("notification").style.display = "none"
        }, 1500 )
      })

      socket.on("isstarted", () => {
        window.location.replace("/")
      })

      // Join gomb lenyomáskor
     function onloadfunc() {
        // kikéri a szoba nevét
        // request a szoba belépésre a szerver felé
        socket.emit('joinRoom');
        card_decl();
        color_select_decl();
        draw_decl();
      };

      function gameload(game, personal){

        console.log(`PERSONAL: ${JSON.stringify(personal.playerinfo.name)}`)
        console.log(`PERSONAL: ${JSON.stringify(game)}`)
        document.getElementById('startt').style.display = "none"

        const pending = document.getElementById("pending");
          if(game.status == "selecting"){
            if(personal.playerinfo.name == game.currentplayer) {
              const colorselectdiv = document.getElementById("colorselect");
              colorselectdiv.style.display = "flex"
            }
            pending.textContent = `${game.currentplayer} színt választ!`
          } else {
            pending.textContent = ``
          }
          

        document.getElementById('currentplayer').innerHTML = `currentplayer: ${game.currentplayer}`;
        document.getElementById('currentcard').src = `../cards/${game.currentcard}.png`;

        const gamediv = document.getElementById('game');
        //document.getElementById('pendingcard').innerHTML = `pending: ${game.pendingcards}`;

          console.log(game)
          console.log(personal)
          // console.log(player.players)
        document.getElementById("order").innerHTML = `order: ${game.order}`
        console.log(game)


          let playerdiv = document.createElement("div");
          let playercards = document.createElement('div');
          personal.playerinfo.cards.forEach(card => {
            let cardelement = document.createElement('img')
            cardelement.src = `../cards/${card}.png`

            cardelement.alt = `${card}`
            cardelement.classList.add("card")
            console.log(cardelement)
            playercards.append(cardelement)
            playercards.classList.add("owncards")
            playercards.setAttribute('id', 'owncards')

          })
          playerdiv.append(playercards)
          gamediv.append(playerdiv)
          card_decl()


          console.log("----------opponet--------------")
          console.log(game)

          const opponentsdiv = document.getElementById("opponents");
          opponentsdiv.innerHTML = ""
          Object.values(game.opponents).forEach(opponent => {
            let opponentdiv = document.createElement("div");
            let opponentdetails = document.createElement("h4");
            let opponentcards = document.createElement('div');
            opponentcards.classList.add("opponentcardlist")
            opponentdetails.textContent = `${opponent.name}:`
            if(opponent.cards > 5) {
              for(let i = 0; i < opponent.cards-(opponent.cards-5);i++){
              let card = document.createElement('img');
              card.src = "../cards/ph.png"
              card.width = 75;
              card.height= 108.75;
              card.classList.add("placeholder")
              opponentcards.append(card)
            }

            let cardtext = document.createElement("p");
            cardtext.textContent = `+${opponent.cards-5}`

            opponentcards.append(cardtext)
            } else {
              for(let i = 0; i < opponent.cards;i++){
              let card = document.createElement('img');
              card.src = "../cards/ph.png"
              card.width = 75;
              card.height= 108.75;
              card.classList.add("placeholder")
              opponentcards.append(card)
            } 
          }

            opponentdiv.append(opponentdetails)
            opponentdiv.append(opponentcards)
            opponentsdiv.append(opponentdiv)
          })
          console.log(personal.playerinfo.name)

          if(personal.playerinfo.name == game.currentplayer && personal.playerinfo.cards.filter(card =>  card[1] == "a" || card[0] == game.currentcard[0] || card[1] == game.currentcard[1]).length == 0 ){
            document.getElementById("draw").style.display = "block"
          } else {
            document.getElementById("draw").style.display = "none"
          }

        };
      

      function carduse(card){
        socket.emit("usecard", card, gameid)
      }

      function card_decl(){
        const cards = document.querySelectorAll(".card");

        cards.forEach(card => {
          card.addEventListener("click", (event) => {
            console.log("asd")
            carduse(event.target.alt)
          })
        })
      }

      function color_select_decl(){
        const colorselectdiv = document.getElementById("colorselect");
        colorselectdiv.style.display = "none"
        const buttons = colorselectdiv.querySelectorAll("button");

        buttons.forEach(button => {
          button.addEventListener("click", (event) => {
            console.log(`GAMEID: ${gameid}`)
            const color = event.target.id
            const pending = document.getElementById("pending");
            pending.textContent = ``
            const colorselectdiv = document.getElementById("colorselect");
            colorselectdiv.style.display = "none"
            socket.emit("colorselected", color, gameid)
          })
        })
      }

      function draw_decl(){
        document.getElementById("draw").addEventListener("click", () => {
          console.log("123")
          socket.emit("drawcard", gameid)
          getElementById("draw").style.display = "none"
        } )
      }

    </script>

    <script>
        onloadfunc()
    </script>

</body>
</html>
