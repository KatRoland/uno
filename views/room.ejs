<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <title>Document</title>
</head>
<body>

    <h1 id="roomid"></h1>
    <h1 id="owner"></h1>
    <h1 id="currentplayer"></h1>
    <h1 id="currentcard"></h1>
    <div id="players"></div>
    <div id="startt">
        <button id="startbtn" type="submit">startt</button>
    </div>

      
    <div id="status"></div>

    <div id="opponents"></div>

    <div id="colorselect">
      <button id="p">Piros</button>
      <button id="k">Kék</button>
      <button id="z">Zöld</button>
      <button id="s">Sárga</button>
    </div>

    <div id="game"></div>

    <h1 id="pending"></h1>

    <button id="draw">Draw</button>

    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
    <script>

      const socket = io();

      var gameid;

      socket.on('roomload', (room,roomname, game) => {
        document.getElementById('roomid').innerHTML = `Room Name: ${roomname}`;
        document.getElementById('owner').innerHTML = `Owner: ${room.owner}`;
        document.getElementById('status').innerHTML = `${room.status}`;
        document.getElementById("colorselect").style.display = "none"
        if(game != "N/A"){
        document.getElementById("startbtn").style.display = "none"
        console.log(game)
        document.getElementById('currentplayer').innerHTML = `currentplayer: ${game.currentplayer}`;
        document.getElementById('currentcard').innerHTML = `${game.currentcard}`;
        gameid = game.personaldata.gameid;
          gameload(game, game.personaldata)
        }
      })


      socket.on('gamestarted', () => {
        document.getElementById('status').innerHTML = 'started';
      })

      // Player lista kiíratás
      socket.on('playerlist', playerlist => {
        console.log(playerlist)
        // Törli a mostani listát
        document.getElementById('players').innerHTML = '';
        // és kiíratja a jelenlegit

        playerlist.forEach(playername => {
          const playelement = document.createElement('div');
          playelement.innerHTML = playername;
          document.getElementById('players').appendChild(playelement);
          console.log(playelement,playername)
        });
      });

      // szoba start gomb nyomásakor
      document.getElementById('startt').addEventListener('click', function(event) {
        event.preventDefault();
        socket.emit('start');
      });


      socket.on("gamestart", (personal, game) => {
        document.getElementById("startbtn").style.display = "none"
        document.getElementById("colorselect").style.display = "none"
        gameid = personal.gameid;
        console.log(gameid)
        console.log("game:")
        console.log(game)
        console.log("personal:")
        console.log(personal)
        console.log("-----started---------")
        gameload(game, personal)
})

      socket.on("reload", (player, game, status) => {
        document.getElementById('currentplayer').innerHTML = `currentplayer: ${game.currentplayer}`;
        document.getElementById('currentcard').innerHTML = `${game.currentcard}`;


        const gamediv = document.getElementById('game');
        gamediv.innerHTML = ""
          console.log(game)
          // console.log(player.players)
          let playerdiv = document.createElement("div");
          let playername = document.createElement('h2');
          let playercards = document.createElement('div');
          playername.append(player.name)
          player.cards.forEach(card => {
            let cardelement = document.createElement('h4')
            cardelement.textContent = card
            cardelement.classList.add("card")
            console.log(cardelement)
            playercards.append(cardelement)
          })
          playerdiv.append(playername)
          playerdiv.append(playercards)
          gamediv.append(playerdiv)
          card_decl()


          const pending = document.getElementById("pending");
          if(status == "selecting"){
            pending.textContent = `${game.currentplayer} színt választ!`
          } else {
            pending.textContent = ``
          }

          console.log("----------opponet--------------")
          console.log(game)

          const opponentsdiv = document.getElementById("opponents");
          opponentsdiv.innerHTML = ""
          Object.values(game.opponents).forEach(opponent => {
            let opponentdiv = document.createElement("div");
            let opponentdetails = document.createElement("h2");
            opponentdetails.textContent = `${opponent.name}: ${opponent.cards}`
            opponentdiv.append(opponentdetails)
            opponentsdiv.append(opponentdiv)
          })

          if(player.name == game.currentplayer && player.cards.filter(card =>  card[1] == "a" || card[0] == game.currentcard[0] || card[1] == game.currentcard[1]).length == 0){
            document.getElementById("draw").style.display = "block"
          } else {
            document.getElementById("draw").style.display = "none"
          }

      })

      socket.on("selectcolor", () => {
        console.log("selectcolor")
        const colorselectdiv = document.getElementById("colorselect");
        colorselectdiv.style.display = "block"
      })

      socket.on("quit", () => {
        window.location.replace("/")
      })

      // Join gomb lenyomáskor
     function onloadfunc() {
        // kikéri a szoba nevét
        // request a szoba belépésre a szerver felé
        socket.emit('joinRoom');
        card_decl();
        color_select_decl();
        draw_decl();
      };

      function gameload(game, personal){

        document.getElementById('currentplayer').innerHTML = `currentplayer: ${game.currentplayer}`;
        document.getElementById('currentcard').innerHTML = `${game.currentcard}`;

        const gamediv = document.getElementById('game');
          console.log(game)
          console.log(personal)
          // console.log(player.players)
          let playerdiv = document.createElement("div");
          let playername = document.createElement('h2');
          let playercards = document.createElement('div');
          playername.append(personal.playerinfo.name)
          personal.playerinfo.cards.forEach(card => {
            let cardelement = document.createElement('h4')
            cardelement.textContent = card
            cardelement.classList.add("card")
            console.log(cardelement)
            playercards.append(cardelement)
          })
          playerdiv.append(playername)
          playerdiv.append(playercards)
          gamediv.append(playerdiv)
          card_decl()


          const opponentsdiv = document.getElementById("opponents");
          if(game.opponents){
          Object.values(game.opponents).forEach(opponent => {
            let opponentdiv = document.createElement("div");
            let opponentdetails = document.createElement("h2");
            opponentdetails.textContent = `${opponent.name}: ${opponent.cards}`
            opponentdiv.append(opponentdetails)
            opponentsdiv.append(opponentdiv)
          })
        }
          console.log(personal.playerinfo.name)

          if(personal.playerinfo.name == game.currentplayer && personal.playerinfo.cards.filter(card =>  card[1] == "a" || card[0] == game.currentcard[0] || card[1] == game.currentcard[1]).length == 0 ){
            document.getElementById("draw").style.display = "block"
          } else {
            document.getElementById("draw").style.display = "none"
          }

        };
      

      function carduse(card){
        socket.emit("usecard", card, gameid)
      }

      function card_decl(){
        const cards = document.querySelectorAll(".card");

        cards.forEach(card => {
          card.addEventListener("click", (event) => {
            carduse(event.target.textContent)
          })
        })
      }

      function color_select_decl(){
        const colorselectdiv = document.getElementById("colorselect");
        colorselectdiv.style.display = "none"
        const buttons = colorselectdiv.querySelectorAll("button");

        buttons.forEach(button => {
          button.addEventListener("click", (event) => {
            const color = event.target.id
            const pending = document.getElementById("pending");
            pending.textContent = ``
            const colorselectdiv = document.getElementById("colorselect");
            colorselectdiv.style.display = "none"
            socket.emit("colorselected", color, gameid)
          })
        })
      }

      function draw_decl(){
        document.getElementById("draw").addEventListener("click", () => {
          console.log("123")
          socket.emit("drawcard", gameid)
        } )
      }

    </script>

    <script>
        onloadfunc()
    </script>

</body>
</html>